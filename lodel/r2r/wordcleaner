#!/usr/bin/perl -w
###########################################################################
#
#      wordcleaner version 0.1 Fevrier 1999
#      
#      Copyright (C) 1998, Ghislain Picard
#
###########################################################################
#
# Ce script peut etre diffuse et modifie librement. Il est distribue
# dans le but d'etre utile, mais SANS GARANTIE.
#
##########################################################################

use strict;

my %conv;

$conv{"eacute"}='é';
$conv{"Eacute"}='É';
$conv{"iacute"}='í';
$conv{"Iacute"}='Í';
$conv{"oacute"}='ó';
$conv{"Oacute"}='Ó';
$conv{"aacute"}='á';
$conv{"Aacute"}='Á';
$conv{"uacute"}='ú';
$conv{"Uacute"}='Ú';

$conv{"egrave"}='è';
$conv{"Egrave"}='È';
$conv{"agrave"}='à';
$conv{"Agrave"}='À';
$conv{"ugrave"}='ù';
$conv{"Ugrave"}='Ù';
$conv{"ograve"}='ò';
$conv{"Ograve"}='Ò';

$conv{"ecirc"}='ê';
$conv{"Ecirc"}='Ê';
$conv{"icirc"}='î';
$conv{"Icirc"}='Î';
$conv{"ocirc"}='ô';
$conv{"Ocirc"}='Ô';
$conv{"acirc"}='â';
$conv{"Acirc"}='Â';
$conv{"ucirc"}='û';
$conv{"Ucirc"}='Û';

$conv{"Atilde"}='Ã';
$conv{"Auml"}='Ä';
$conv{"AElig"}='Æ';
$conv{"Ccedil"}='Ç';
$conv{"Euml"}='Ë';
$conv{"Igrave"}='Ì';
$conv{"Ntilde"}='Ñ';
$conv{"Iuml"}='Ï';
$conv{"Ograve"}='Ò';
$conv{"Oacute"}='Ó';
$conv{"Ocirc"}='Ô';
$conv{"Otilde"}='Õ';
$conv{"Ouml"}='Ö';
$conv{"Uuml"}='Ü';

$conv{"atilde"}='ã';
$conv{"auml"}='ä';
$conv{"aelig"}='æ';
$conv{"ccedil"}='ç';
$conv{"euml"}='ë';
$conv{"igrave"}='ì';
$conv{"iuml"}='ï';
$conv{"ntilde"}='ñ';
$conv{"ograve"}='ò';
$conv{"otilde"}='õ';
$conv{"ouml"}='ö';
$conv{"uuml"}='ü';
$conv{"yacute"}='ý';
$conv{"yuml"}='ÿ';

##########################################################################
#
# main

&arguments;
print "enleve les balises restantes\n";
foreach (@ARGV) {
	&parse_html ($_);
}
print "fin\n";
exit;

###########################################################################

sub arguments {

	if ($ARGV[0] eq "") {
		print <<endHelp;
postcleaner version 0.1 Fevrier 1999
Copyright (C) 1999, Ghislain Picard

wordcleaner html1 html2 html3
nettoie un fichier html produit par word

endHelp
		exit;
	}
}

########################################

sub parse_html {

	my ($txt_file)=@_;

	my $cl_file;
	if ($txt_file=~/(.*)\.(\w+)$/) {
		$cl_file="$1.cl";
	} else {
		$cl_file="$txt_file.cl";
	}

	open (TXT,"$txt_file") || die "erreur: impossible d'ouvrir le fichier $txt_file en lecture";
	my @txt=<TXT>;
	close (TXT);

	open (CL,">$cl_file") || die "erreur: impossible d'ouvrir le fichier $cl_file en ecriture";
	my $mode=0;		# mode clean
	#$table=0;
	
	foreach my $l (@txt) {
		my $pre="";
		my $post="";
		$l=~s /[\0-\11]//;
		$l=~s /[\13-\37]//;
		$l=~ s/\222/\'/g;
		$l=~ s/<TABLE/(!--INSERT=begintable--)<TABLE/gi;
		$l=~ s/<\/TABLE>/<\/TABLE>(!--INSERT=endtable--)/gi;
		$l=~s/\&(([A-Z]+?)(acute|grave|uml|circ|cedil|slash|lig|tild))\;/if ($conv{$1}) { $conv{$1};} else { print "$1 inconnu\n";$2; }/gei;
		
		if ($mode eq 0) {
			if ($l=~/\(!--noclean--\)/) {
				$l=$`;
				$post="(!--INSERT=noclean--)$'";
				die ("le mode noclean n'existe plus !!!! on ne veut que du clean"); $mode=1;
			}
		} else {
		if ($mode eq 1) {
			if ($l=~/\(!--clean--\)/) {
				$pre="$`(!--INSERT=clean--)";
				$l=$';
				$mode=0;
			} else {
				$pre=$l;
				$l="";
			}
		}
		}
		if ($l ne "") {
	 		$l=~ s/<\/?DIR>|<\/FONT>|<FONT.*?>|<BODY.*?>|<\/BODY>|<HTML.*?>|<\/HTML>//gi;
			#$l=~ s/<P ALIGN=.*?>(.*?)<\/P>/$1<\/BR>/gi;
			$l=~ s/<P.*?>//gi;
			$l=~ s/<\/P>/<BR>/gi;
			#$l=~ s/(<TABLE .*?WIDTH=)\d+(.*?>)/$1\"100%\"$2/g;
			$l=~ s/_(<\w+>)/$1_/g;
			$l=~ s/(I{1,3}|VI{0,3}|IX|XI{0,3}|XIV|XVI{0,3}|XIX|XXI{0,3})e /$1<SUP>e<\/SUP> /g;
		}
		print CL "$pre$l$post";
	}

	close (CL);
}

############################## fin #######################################

